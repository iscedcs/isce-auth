generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String   @id @default(uuid())
  firstName                   String?
  lastName                    String?
  email                       String   @unique
  phone                       String   @unique
  password                    String
  businessName                String?
  displayPicture              String?
  businessAddress             String?
  identificationType          IdentificationType
  idNumber                    String?            @unique
  address                     String?
  dob                         DateTime?
  userType                    UserType           @default(USER)
  passwordReset               PasswordReset?
  associatedBusinessId        String?
  position                    String?
  isBusinessAdmin             Boolean  @default(false)
  invitedByUserId             String?
  deviceId                    String?
  lastLogin                   DateTime?
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  deletedAt                   DateTime?
  devices                     Device[]
}

model EmailVerify {
  id                          String   @id @default(uuid())
  email                       String   @unique
  verifyCode                  String
  isVerified                  Boolean  @default(false)
  expiresAt                   DateTime
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
}

model PasswordReset {
  id                          String   @id @default(uuid())
  userId                      String   @unique
  resetCode                   String
  expiresAt                   DateTime
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  user                        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Device {
  id                         String   @id @default(uuid())
  userId                     String
  type                       DeviceType
  nfcUid                     String   @unique
  label                      String?
  isActive                   Boolean  @default(true)
  isPrimary                  Boolean  @default(false)
  assignedAt                 DateTime
  lastUsedAt                 DateTime?
  user                       User @relation(fields: [userId], references: [id])
}

enum DeviceType {
  CARD
  STICKER
  WRISTBAND
  QR
}

enum PrivacyLevel {
  PUBLIC
  PRIVATE
  FRIENDS_ONLY
}

model Address {
  id          String   @id @default(uuid())
  addressText String
  latitude    Float
  longitude   Float
}

model ContactInfo {
  id      String   @id @default(uuid())
  phone   String?
  email   String?
}


enum UserType {
  ADMIN
  USER
  SUPER_ADMIN
  BUSINESS_USER
  EMPLOYEE
}

enum IdentificationType {
  CAC
  TIN
  BVN
  NIN
}
